#!/bin/bash
# Stuff I use

# set -e # exit if any command has non-zero return value
# set -u # exit if undefined reference found
# set -o pipefail # do not mask pipeline errors
# #set -x # debug mode
# IFS=$'\n\t'

myk-check() {
echo -e "LANG: $LANG"
echo -e "TERM: $TERM"
echo -e "VISUAL: $VISUAL"
echo -e "EDITOR: $EDITOR"
echo -e "PAGER: $PAGER"
echo -e "LESS: $LESS"
IFS=':'
for p in $PATH; do
  echo "$p"
done
}

myk-update-db() {
find / >"$HOME/.myk-db" 2>/dev/null
# don't scan fat-c; don't care
#find / -not \( -path /fat-c -prune \) >$HOME/.myk-db 2>/dev/null
}

myk-find() {
if [ ! -f "$HOME/.myk-db" ]; then
  echo "Database not found; updating database..."
  myk-update-db
fi
grep --color=auto "$*" "$HOME/.myk-db"
}


myk-rnd-bg() {
feh --bg-fill --randomize ~/Downloads/*.jpg
}

myk-youtube-dl() {
youtube-dl --restrict-filenames -o '%(title)s.%(ext)s' "$@"
}

git_sync() {
(
REMOTE="$1"
LOCALDIR="$(echo "$REMOTE" | rev | cut -d / -f 1 | rev)"

if [[ -d "$LOCALDIR" ]]; then
  (cd "$LOCALDIR"; git pull)
else
  git clone "$REMOTE"
fi
)
}

PATH_PUSH_ONCE () {
if [[ ! "$PATH" =~ $1 ]]; then
  export PATH="$1:$PATH"
fi
}

myk-screenshot() {
if [ -n "$1" ]; then
echo "$1.png"
import -window root "$1.png"
else
echo "Usage: my-screenshot [filename]"
fi
}


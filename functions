#!/bin/bash
# set -e # exit if any command has non-zero return value
# set -u # exit if undefined reference found
# set -o pipefail # do not mask pipeline errors
# #set -x # debug mode
# IFS=$'\n\t'

shout() { echo "$0: $*" >&2; }
barf() { shout "fatal: $*"; exit 111; }
safe() { "$@" || barf "cannot $*"; }

git_sync() {
(
cd "$1" || exit 1
REMOTE="$2"
LOCALDIR="$(echo "$REMOTE" | rev | cut -d / -f 1 | rev)"

if [[ -d "$LOCALDIR" ]]; then
  cd "$LOCALDIR" || exit 1; git pull
else
  git clone "$REMOTE"
fi
)
}

myk-rnd-bg() {
feh --bg-fill --randomize ~/Downloads/*.jpg
}

myk-youtube-dl() {
youtube-dl --restrict-filenames -o '%(title)s.%(ext)s' "$@"
}

git_sync() {
(
REMOTE="$1"
LOCALDIR="$(echo "$REMOTE" | rev | cut -d / -f 1 | rev)"

if [[ -d "$LOCALDIR" ]]; then
  (cd "$LOCALDIR"; git pull)
else
  git clone "$REMOTE"
fi
)
}

PATH_PUSH_ONCE () {
if [[ ! "$PATH" =~ $1 ]]; then
  export PATH="$1:$PATH"
fi
}

myk-screenshot() {
if [ -n "$1" ]; then
echo "$1.png"
import -window root "$1.png"
else
echo "Usage: my-screenshot [filename]"
fi
}

